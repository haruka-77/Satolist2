<UserControl x:Class="Satolist2.Control.ReplaceList"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:Satolist2.Control"
			 xmlns:util="clr-namespace:Satolist2.Utility"
			 xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<util:EditorLoadStateToVisibilityConverter State="Initialized" x:Key="InitializedVisibility"  />
		<util:EditorLoadStateToVisibilityConverter State="Loaded" x:Key="LoadedVisibility" />
		<util:EditorLoadStateToVisibilityConverter State="LoadFailed" x:Key="LoadFailedVisibility" />
	</UserControl.Resources>
	<Grid>

		<TextBlock Text="replace.txt, replace_after.txt のロードに失敗しているため、編集は無効です。"
				   Visibility="{Binding ReplaceSaveObject.LoadState, Converter={StaticResource InitializedVisibility}}" />
		<TextBlock Text="replace.txt, replace_after.txt がまだロードされていません。"
				   Visibility="{Binding ReplaceSaveObject.LoadState, Converter={StaticResource LoadFailedVisibility}}" />

		<TabControl SelectedIndex="{Binding CurrentTabIndex, Mode=TwoWay}"
					Visibility="{Binding ReplaceSaveObject.LoadState, Converter={StaticResource LoadedVisibility}}">
			<TabItem Header="文字置換リスト">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<StackPanel Grid.Row="0" Orientation="Horizontal">
						<Button Margin="3" Command="{Binding AddItemCommand}" Padding="3 0 3 0">
							<Button.Content>
								<StackPanel Orientation="Horizontal">
									<Path Fill="{StaticResource ThemeGreen}" Margin="-3 -3 2 2" Data="{StaticResource AddIcon}" />
									<TextBlock Text="追加" />
								</StackPanel>
							</Button.Content>
						</Button>
					</StackPanel>

					<ListView Grid.Row="1" x:Name="MainList" ItemsSource="{Binding Items}" ScrollViewer.CanContentScroll="True">
						<ListView.InputBindings>
							<KeyBinding Key="Delete" Command="{Binding RemoveItemCommand}" />
						</ListView.InputBindings>
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
								<Setter Property="HorizontalContentAlignment" Value="Stretch" />
								<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu>
											<MenuItem Header="削除" InputGestureText="Delete" Command="{Binding RemoveItemCommand}" />
										</ContextMenu>
									</Setter.Value>
								</Setter>
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.View>
							<GridView>
								<GridView.Columns>
									<GridViewColumn Header="置換前" Width="150">
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<TextBox HorizontalAlignment="Stretch" Text="{Binding Before, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>

									<GridViewColumn Header="置換後" Width="150">
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<TextBox HorizontalAlignment="Stretch" Text="{Binding After, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>

									<GridViewColumn Header="トーク時置換">
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<RadioButton IsChecked="{Binding IsReplaceAfter, Mode=TwoWay}" Background="Transparent"/>
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>

									<GridViewColumn Header="ロード時置換">
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<RadioButton IsChecked="{Binding IsReplace, Mode=TwoWay}" Background="Transparent" />
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>

									<GridViewColumn>
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<Button Grid.Column="0" Margin="0 0 5 0" Command="{Binding RemoveSingleItemCommand}">
													<Button.Content>
														<Path Fill="{StaticResource ThemeRed}" Margin="-3 -3 2 2" Data="{StaticResource RemoveIcon}" />
													</Button.Content>
												</Button>
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>
								</GridView.Columns>
							</GridView>
						</ListView.View>
					</ListView>
				</Grid>
			</TabItem>

			<TabItem Header="replace.txt">
				<avalonEdit:TextEditor Document="{Binding ReplaceDocument, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
			</TabItem>

			<TabItem Header="replace__after.txt">
				<avalonEdit:TextEditor Document="{Binding ReplaceAfterDocument, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
			</TabItem>
			
		</TabControl>
	</Grid>
</UserControl>

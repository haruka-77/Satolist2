<UserControl x:Class="Satolist2.Control.EventEditor"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:Satolist2.Control"
			 xmlns:model="clr-namespace:Satolist2.Model"
			 xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
			 xmlns:util="clr-namespace:Satolist2.Utility"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<ResourceDictionary>
			<model:InsertItemPaletteShortCutGestureConverter x:Key="ShortCutGestureConverter" />
			<util:ReferenceToBoolConverter x:Key="ReferenceToBoolConverter" />
			<BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<util:ColorToBrushConverter x:Key="ColorToBrushConverter" />
		</ResourceDictionary>
		
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Popup x:Name="InputHelpPopup">
			<Grid Width="200" Height="50" Background="DarkGray">
				<TextBlock Text="テストテキスト" />
			</Grid>
		</Popup>

		<Grid Grid.Row="0" IsEnabled="{Binding EnableHeaderEdit}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<StackPanel Grid.Column="0" Margin="3">
				<TextBlock Text="種類" />
				<ComboBox ItemsSource="{Binding EventTypeList}" DisplayMemberPath="Name" SelectedValuePath="Type" SelectedValue="{Binding Event.Type}">
				</ComboBox>
			</StackPanel>

			<StackPanel Grid.Column="1" Margin="3">
				<TextBlock Text="名前" />
				<TextBox x:Name="EventNameTextBox" Text="{Binding Event.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<TextBox.InputBindings>
						<KeyBinding Gesture="CTRL+SHIFT+F" Command="{Binding ShowGlobalSearchCommand}" CommandParameter="{Binding .,RelativeSource={RelativeSource AncestorType=TextBox}}"/>
					</TextBox.InputBindings>
				</TextBox>
			</StackPanel>

			<StackPanel Grid.Column="2" Margin="3">
				<TextBlock Text="条件"/>
				<TextBox x:Name="ConditionTextBox" Text="{Binding Event.Condition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<TextBox.InputBindings>
						<KeyBinding Gesture="CTRL+SHIFT+F" Command="{Binding ShowGlobalSearchCommand}" CommandParameter="{Binding .,RelativeSource={RelativeSource AncestorType=TextBox}}"/>
					</TextBox.InputBindings>
				</TextBox>
			</StackPanel>

		</Grid>

		<Grid Grid.Row="2" Margin="3" Background="{Binding TextEditorBackgroundColor, Converter={StaticResource ColorToBrushConverter}}">
			<Image Source="{Binding BackgroundImagePath}" Visibility="{Binding IsEnableBackgroundImage, Converter={StaticResource BoolToVisibilityConverter}}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top" />
			<avalonEdit:TextEditor x:Name="MainTextEditor" Document="{Binding Document}"
								   SnapsToDevicePixels="True" Margin="{Binding TextEditorMargin}"
								   Background="Transparent">

				<avalonEdit:TextEditor.Options>
					<avalonEdit:TextEditorOptions ShowSpaces="False" ShowTabs="False"/>
				</avalonEdit:TextEditor.Options>

				<avalonEdit:TextEditor.InputBindings>
					<KeyBinding Gesture="ALT+Q" Command="{Binding SendToGhostCommand}" />
					<KeyBinding Gesture="CTRL+F" Command="{Binding ShowSearchBoxCommand}" />
					<KeyBinding Gesture="CTRL+SHIFT+F" Command="{Binding ShowGlobalSearchCommand}" CommandParameter="{Binding .,RelativeSource={RelativeSource AncestorType=avalonEdit:TextEditor}}"/>
					<KeyBinding Gesture="CTRL+SPACE" Command="{Binding CompletionCommand}" />
				</avalonEdit:TextEditor.InputBindings>

				<avalonEdit:TextEditor.ContextMenu>
					<ContextMenu x:Name="ContextMenuRoot">
						<MenuItem Header="コピー" Command="ApplicationCommands.Copy" InputGestureText="Ctrl+C" />
						<MenuItem Header="切り取り" Command="ApplicationCommands.Cut" InputGestureText="Ctrl+X" />
						<MenuItem Header="貼り付け" Command="ApplicationCommands.Paste" InputGestureText="Ctrl+V" />
						<MenuItem Header="検索" Command="{Binding ShowSearchBoxCommand}" InputGestureText="Ctrl+F" />
						<Separator />
						<MenuItem Header="ゴーストに送信" Command="{Binding SendToGhostCommand}" InputGestureText="Alt+Q" />
						<Separator />
						<MenuItem Header="挿入" ItemsSource="{Binding Main.InsertPalette.Items, FallbackValue={x:Null}}" IsEnabled="{Binding Main.InsertPalette, Converter={StaticResource ReferenceToBoolConverter}}">
							<MenuItem.ItemContainerStyle>
								<Style TargetType="MenuItem">
									<Setter Property="Header" Value="{Binding Label}"/>
									<Setter Property="ItemsSource" Value="{Binding Items}" />
									<Setter Property="InputGestureText" Value="{Binding .,Converter={StaticResource ShortCutGestureConverter}}" />
									<Setter Property="Command" Value="{Binding DataContext.InsertCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
									<Setter Property="CommandParameter" Value="{Binding .}" />
								</Style>
							</MenuItem.ItemContainerStyle>
						</MenuItem>
					</ContextMenu>
				</avalonEdit:TextEditor.ContextMenu>
			</avalonEdit:TextEditor>
		</Grid>
		<local:TextEditorSearchBox x:Name="SearchBox" Grid.Row="1"
				AttachEditor="{Binding .,ElementName=MainTextEditor}" 
				Visibility="{Binding IsShowSearchBox, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}" 
				FocusTrigger="{Binding SearchBoxFocusTrigger, Mode=TwoWay}"/>

	</Grid>
</UserControl>
